<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://node-clash.github.io/news/article-90328.htm" />
    <!-- Required Meta Tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Spring Cloud Feign 请求添加headers</title>
        <meta name="description" content="目录  方案一：方法上的@RequestMapping注解添加headers信息 方案二：接口上的@RequestMapping注解添加headers信息 方案三：使用@Headers注解添加head" />
        <link rel="icon" href="/assets/website/img/node_clash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Node机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://node-clash.github.io/news/article-90328.htm" />
    <meta property="og:site_name" content="Clash Node机场节点分享官网" />
    <meta property="og:title" content="Spring Cloud Feign 请求添加headers" />
    <meta property="og:image" content="https://node-clash.github.io/uploads/20240909-1/ddfe74f598eaac871824cf2de9159094.webp" />
        <meta property="og:release_date" content="2025-04-07T09:02:00" />
    <meta property="og:updated_time" content="2025-04-07T09:02:00" />
        <meta property="og:description" content="目录  方案一：方法上的@RequestMapping注解添加headers信息 方案二：接口上的@RequestMapping注解添加headers信息 方案三：使用@Headers注解添加head" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Cloud Feign 请求添加headers">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/node_clash/animate.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/slick.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/jquery.lineProgressbar.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FTZXQP7KV5"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FTZXQP7KV5');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Starts -->
    <div class="preloader" id="preloader">
        <div class="preloader-inner">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Section Starts -->
    <header class="cropium-header-section fixed-navigation">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Navbar Starts -->
                    <nav class="navbar navbar-area navbar-expand-lg nav-style-02 nav-absolute">
                        <div class="container nav-container">
                            <div class="responsive-mobile-menu">
                                <div class="logo-wrapper">
                                    <a href="/" class="logo">
                                                                        <span>Node Clash</span>
                                                                        </a>
                                </div>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#cropium-main-menu" aria-expanded="false" aria-label="Toggle navigation">
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                </button>
                            </div>
                            <div class="collapse navbar-collapse" id="cropium-main-menu">
                                <ul class="navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div>
                        </div>
                    </nav>
                    <!-- Navbar End -->
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcrumb Area Starts -->
    <section class="breadcrumb-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="title">Spring Cloud Feign 请求添加headers</h1>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> <span> / 正文</span>
                </div>
            </div>
        </div>
    </section>
    <!-- About Section Starts -->
    <section class="cropium-about-section padding-top-90 padding-bottom-120">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <div class="toc"> <h3>目录</h3> <ul> <li><a href="#RequestMappingheaders_2" rel="nofollow">方案一：方法上的@RequestMapping注解添加headers信息</a></li> <li><a href="#RequestMappingheaders_14" rel="nofollow">方案二：接口上的@RequestMapping注解添加headers信息</a></li> <li><a href="#Headersheaders_25" rel="nofollow">方案三：使用@Headers注解添加headers信息</a></li> <li><a href="#RequestInterceptorheaders_37" rel="nofollow">方案四：自定义RequestInterceptor添加headers信息</a></li> <li><a href="#RequestInterceptorheader_56" rel="nofollow">方案五：自定义RequestInterceptor实现添加动态数据到header</a></li> </ul> </div> </h1> <p>@RequestMapping注解的属性中包含一个headers数组，所以尝试使用，在指定的方法上@RequestMapping注解中添加需要的headers，可以是写死的，也可以读取配置，测试是有效的</p> <p>同理@RequestMapping一组的@PostMapping，@GetMapping注解等均适用</p> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span>,headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"app=test-app"</span>,<span class="token string">"token=<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </h1> <p>针对单个方法可以在方法上的@RequestMapping注解中添加headers，如果同一个接口中所有的方法都需要同样的headers时在方法上加就比较繁琐了，可以在接口上的@RequestMapping注解中添加headers，使整个接口的方法均被添加同样的headers</p> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/"</span>,headers<span class="token operator">=</span><span class="token punctuation">{<!-- --></span><span class="token string">"app=test-app"</span>,<span class="token string">"token=<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> </h1> <pre><code class="prism language-bash">@FeignClient<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"server"</span>,url<span class="token operator">=</span><span class="token string">"127.0.0.1:8080"</span><span class="token punctuation">)</span> @Headers<span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span><span class="token string">"app: test-app"</span>,<span class="token string">"token:<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span> public interface FeignTest<span class="token punctuation">{<!-- --></span>     @RequestMapping<span class="token punctuation">(</span>value<span class="token operator">=</span><span class="token string">"/test"</span><span class="token punctuation">)</span>     String test<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>查看openfeign官方文档发现其使用的是@Headers来添加headers，测试发现并没有生效，spring cloud使用了自己的SpringMvcContract来解析注解，所以需要自己实现一个Contract来实现对@Headers注解的支持，具体实现参照https://juejin.im/post/6844903961653149709</p> </h1> <p>feign提供了一个拦截器接口RequestInterceptor，实现RequestInterceptor接口就可以实现对feign请求的拦截，接口提供了一个方法apply()，实现apply()方法</p> <pre><code class="prism language-bash">@Component public class FeignRequestInterceptor implements RequestInterceptor<span class="token punctuation">{<!-- --></span>      @Value<span class="token punctuation">(</span><span class="token string">"<span class="token variable">${test-app.token}</span>"</span><span class="token punctuation">)</span>     private String token<span class="token punctuation">;</span>          @Override     public void apply<span class="token punctuation">(</span>RequestTemplate requestTemplate<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         requestTemplate.header<span class="token punctuation">(</span><span class="token string">"app"</span>,<span class="token string">"test-app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//静态         requestTemplate.header<span class="token punctuation">(</span><span class="token string">"token"</span>,token<span class="token punctuation">)</span><span class="token punctuation">;</span>//读配置<span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>实现apply()方法直接添加header会拦截所有的请求都加上headers，如果不是所有的feign请求都需要用到不建议此方法</p> </h1> <p>以上方案都不适合把动态的数据放入headers中，而通常场景下可能经常需要把计算的签名，用户id等动态信息设置到headers，所以还需要一个更加完善的方案。方案1/2/3均不能设置动态的值，方案4可以设置动态值，但是没做到请求的区分，所以在方案4的基础上进行改进得到了较为完善的方案5。具体实现如下：</p> <p>在请求调用代码中，获取到HttpServletRequest对象，将需要添加到headers中的值封装成一个map后放入HttpServletRequest的attribute域中</p> <pre><code class="prism language-bash">ServletRequestAttributes attributes<span class="token operator">=</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span> RequestContextHolder.getRequestAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> HttpServletRequest request<span class="token operator">=</span> Objects.requireNonNull<span class="token punctuation">(</span>attributes<span class="token punctuation">)</span>.getRequest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> String signedMsg<span class="token operator">=</span> getSignedMsg<span class="token punctuation">(</span>reqJson<span class="token punctuation">)</span><span class="token punctuation">;</span> // 计算签名字符串 Map<span class="token operator">&lt;</span>String, String<span class="token operator">&gt;</span> reqMap<span class="token operator">=</span> new HashMap<span class="token operator">&lt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> reqMap.put<span class="token punctuation">(</span><span class="token string">"content-type"</span>,<span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>//常量字段 reqMap.put<span class="token punctuation">(</span><span class="token string">"accessKey"</span>, accessKey<span class="token punctuation">)</span><span class="token punctuation">;</span>//常量字段 reqMap.put<span class="token punctuation">(</span><span class="token string">"signedMsg"</span>, signedMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>//动态计算/获取字段 request.setAttribute<span class="token punctuation">(</span><span class="token string">"customizedRequestHeader"</span>, reqMap<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>在自定义RequestInterceptor中获取到HttpServletRequest对象的attribute域中指定的key，将key对应map中的所有参数加入到headers。</p> <pre><code class="prism language-bash">@Component public class FeignRequestInterceptor implements RequestInterceptor<span class="token punctuation">{<!-- --></span>      @Override     public void apply<span class="token punctuation">(</span>RequestTemplate requestTemplate<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         ServletRequestAttributes attributes<span class="token operator">=</span><span class="token punctuation">(</span>ServletRequestAttributes<span class="token punctuation">)</span> RequestContextHolder.getRequestAttributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         HttpServletRequest request<span class="token operator">=</span> attributes.getRequest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          // 设置自定义header         // 设置request中的attribute到header以便转发到Feign调用的服务         Enumeration<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> reqAttrbuteNames<span class="token operator">=</span> request.getAttributeNames<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>reqAttrbuteNames<span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">while</span><span class="token punctuation">(</span>reqAttrbuteNames.hasMoreElements<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span>                 String attrName<span class="token operator">=</span> reqAttrbuteNames.nextElement<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"customizedRequestHeader"</span>.equalsIgnoreCase<span class="token punctuation">(</span>attrName<span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span><span class="token builtin class-name">continue</span><span class="token punctuation">;</span><span class="token punctuation">}</span>                 Map<span class="token operator">&lt;</span>String,String<span class="token operator">&gt;</span> requestHeaderMap<span class="token operator">=</span><span class="token punctuation">(</span>Map<span class="token punctuation">)</span>request.getAttribute<span class="token punctuation">(</span>attrName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>Map.Entry<span class="token operator">&lt;</span>String, String<span class="token operator">&gt;</span> entry<span class="token builtin class-name">:</span> requestHeaderMap.entrySet<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">{<!-- --></span>                     requestTemplate.header<span class="token punctuation">(</span>entry.getKey<span class="token punctuation">(</span><span class="token punctuation">)</span>, entry.getValue<span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token builtin class-name">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-89577.htm">宠物领养协议有法律效力吗多少钱合适 宠物领养协议有法律效力吗多少钱合适呢</a></p>
                                        <p>下一个：<a href="/news/article-90332.htm">动物医院怎么用英语怎么说 动物医院用英语怎么说?</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-83814.htm" title="宠物粮食生产厂家一年能盈利多少钱 宠物粮食生产厂家一年能盈利多少钱啊">宠物粮食生产厂家一年能盈利多少钱 宠物粮食生产厂家一年能盈利多少钱啊</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-node-share.htm" title="3月2日→20.1M/S|2025年最新免费节点Clash Node订阅链接地址">3月2日→20.1M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-66375.htm" title="给动物打狂犬疫苗打几针好（动物打的狂犬疫苗价格）">给动物打狂犬疫苗打几针好（动物打的狂犬疫苗价格）</a></li>
                        <li class="py-2"><a href="/news/article-89576.htm" title="VUE3setup响应式函数系统API详解">VUE3setup响应式函数系统API详解</a></li>
                        <li class="py-2"><a href="/news/article-88828.htm" title="开宠物店坑在哪?（开宠物店的坑）">开宠物店坑在哪?（开宠物店的坑）</a></li>
                        <li class="py-2"><a href="/news/article-88141.htm" title="知名宠物品牌卖星期狗（星期狗多少钱一只）">知名宠物品牌卖星期狗（星期狗多少钱一只）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-9-free-high-speed-nodes.htm" title="3月9日→21.9M/S|2025年最新免费节点Clash Node订阅链接地址">3月9日→21.9M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-70876.htm" title="天星国际宠物用品公司（天星国际宠物用品公司怎么样）">天星国际宠物用品公司（天星国际宠物用品公司怎么样）</a></li>
                        <li class="py-2"><a href="/news/article-83815.htm" title="猫体外驱虫能保持多久（猫体外驱虫对猫没有伤害吗）">猫体外驱虫能保持多久（猫体外驱虫对猫没有伤害吗）</a></li>
                        <li class="py-2"><a href="/news/article-84529.htm" title="动物医院介绍资料 动物医院介绍资料大全">动物医院介绍资料 动物医院介绍资料大全</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!-- Footer Section Starts -->
    <footer class="footer-section common-footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="footer-logo">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Clash Node机场节点分享官网</a> 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Javascript Files -->
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery-2.2.4.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/slick.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.magnific-popup.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.lineProgressbar.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/lineProgressbarActivate.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/easing.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/wow.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>