<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://node-clash.github.io/news/article-42948.htm" />
    <!-- Required Meta Tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>【SpringBoot实战】核心配置和注解</title>
        <meta name="description" content="前言 SpringBoot核心配置在springboot中有非常重要的作用，我们可是使用核心配置文件进行一些基础功能的定义，属性值的注入等。springboot支持两种格式的核心配置文件，一种是pro" />
        <link rel="icon" href="/assets/website/img/node_clash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Node机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://node-clash.github.io/news/article-42948.htm" />
    <meta property="og:site_name" content="Clash Node机场节点分享官网" />
    <meta property="og:title" content="【SpringBoot实战】核心配置和注解" />
    <meta property="og:image" content="https://node-clash.github.io/uploads/20240909-1/ddfe74f598eaac871824cf2de9159094.webp" />
        <meta property="og:release_date" content="2025-01-19T07:10:19" />
    <meta property="og:updated_time" content="2025-01-19T07:10:19" />
        <meta property="og:description" content="前言 SpringBoot核心配置在springboot中有非常重要的作用，我们可是使用核心配置文件进行一些基础功能的定义，属性值的注入等。springboot支持两种格式的核心配置文件，一种是pro" />
        
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/node_clash/animate.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/slick.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/jquery.lineProgressbar.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FTZXQP7KV5"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FTZXQP7KV5');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Starts -->
    <div class="preloader" id="preloader">
        <div class="preloader-inner">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Section Starts -->
    <header class="cropium-header-section fixed-navigation">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Navbar Starts -->
                    <nav class="navbar navbar-area navbar-expand-lg nav-style-02 nav-absolute">
                        <div class="container nav-container">
                            <div class="responsive-mobile-menu">
                                <div class="logo-wrapper">
                                                                        <a href="/" class="logo">
                                        <span>Clash Node</span>
                                    </a>
                                                                    </div>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#cropium-main-menu" aria-expanded="false" aria-label="Toggle navigation">
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                </button>
                            </div>
                            <div class="collapse navbar-collapse" id="cropium-main-menu">
                                <ul class="navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </nav>
                    <!-- Navbar End -->
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcrumb Area Starts -->
    <section class="breadcrumb-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="title">【SpringBoot实战】核心配置和注解</h1>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> <span> / 正文</span>
                </div>
            </div>
        </div>
    </section>
    <!-- About Section Starts -->
    <section class="cropium-about-section padding-top-90 padding-bottom-120">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<h2 id="前言">前言</h2> <p>SpringBoot核心配置在springboot中有非常重要的作用，我们可是使用核心配置文件进行一些基础功能的定义，属性值的注入等。springboot支持两种格式的核心配置文件，一种是properties和yaml，properties采用传统的键值对方式，但是相比于yaml优先级更高，yaml采用采用树状结构，使用缩进进行关系判断。<br /> 注解可以说是springboot的一大特点，采用注解极大的简化了spring的配置问题。</p> <h2 id="环境搭建">环境搭建</h2> <p>我们采用上篇博客简单spring initializr方式创建springboot项目，可参考<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.cnblogs.com/hjk-airl/p/16081134.html"  target="_blank" rel="nofollow">https://www.cnblogs.com/hjk-airl/p/16081134.html</a></p> <h3 id="applicationproperties和applicationyaml">application.properties和application.yaml</h3> <p>application.properties和application.yaml作用是一样的，对于不同的人群有不一样的偏好，可采用不同的方式，看个人喜好。</p> <ul> <li>我们在resources文件夹下创建一个application.yaml文件，方便同时对别两种方式的不同，因为我们在创建项目的时候application.properties已经创建，所以只需要创建yaml就行。</li> <li>步骤（右键resources-&gt;new-&gt;file-&gt;输入application.yaml)一定要是这个文件名，不然springboot不识别，创建完成后可以看到这个文件的图标和application.properties文件一样。</li> </ul> <h4 id="springboot基本系统属性配置">springBoot基本系统属性配置</h4> <p>我们先修改一下端口号看一下，我们知道默认的端口号是8080，我们修改为8081然后运行。</p> <pre><code>server.port=8081</code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220510/caf95deae8490f534a8a757920b585ca.jpg" alt="【SpringBoot实战】核心配置和注解"></p> <p>在这值得注意的是当我们同时存在application.properties和application.yaml时，并且两者都有内容时，会优先使用properties文件，我们在application.properties文件内容删除或者注释掉在application.yaml里输入</p> <pre><code>server:   port: 8082</code></pre> <p>我们可以在配置文件里配置一些基本信息如jdbc的环境变量，和开启松散绑定，开启什么什么缓存的配置等。</p> <pre><code>spring:   datasource:     driver-class-name: com.mysql.jdbc.Driver     password: 123456     username: root</code></pre> <p>我们还可以配置一些自己类的属性。<br /> 我们创建一个Person类，我们在加@ConfigurationProperties时idea可能会爆红，但是对程序影响，我们可以先在pom.xml里加一个依赖,如果还爆红那就把idea关闭在重新打开。</p> <pre><code>	&lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-configuration-processor&lt;/artifactId&gt;         &lt;/dependency&gt;</code></pre> <pre><code>package com.hjk.springboot01.pojo;  import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.stereotype.Component;  @Component //将Person类作为Bean注入Sprng容器 @ConfigurationProperties(prefix = "person") public class Person {     private String name;     private String address;      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public String getAddress() {         return address;     }      public void setAddress(String address) {         this.address = address;     }      @Override     public String toString() {         return "Person{" +                 "name='" + name + '\'' +                 ", address='" + address + '\'' +                 '}';     } }</code></pre> <p>然后在编辑controller类</p> <pre><code>package com.hjk.springboot01.controller;  import com.hjk.springboot01.pojo.Person; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RestController;  @RestController public class PersonController {      @Autowired     public Person person;      @GetMapping("/person")     public String getPerson(){         System.out.println(person.toString());         return person.toString();     }  }</code></pre> <p>最后我们在核心配置文件application.properties或者application.yaml里编写想要配置的东西，我没配置Person的属性。<br /> application.properties</p> <pre><code>person.name='hjk' person.address='中国'</code></pre> <p>application.yaml<br /> 还是那个问题，如果你同时存在properties和yaml文件，并且两者都有同种属性，那么会优先使用properties里面的。</p> <pre><code>person:   name: hjk   address: hahaha</code></pre> <p>最后我们访问当本地url可以在控制台看到输出。<br /><mark>对比两种注入方式</mark></p> <table> <thead> <tr> <th>对比点</th> <th>@Configuration</th> <th>@Value</th> </tr> </thead> <tbody> <tr> <td>底层框架</td> <td>springboot</td> <td>spring</td> </tr> <tr> <td>功能</td> <td>批量注入配置文件属性</td> <td>单个注入</td> </tr> <tr> <td>setter方法</td> <td>需要</td> <td>不需要</td> </tr> <tr> <td>复制类型注入</td> <td>支持</td> <td>不支持</td> </tr> <tr> <td>松散绑定</td> <td>支持</td> <td>不支持</td> </tr> <tr> <td>JSR303数据校验</td> <td>支持</td> <td>不支持</td> </tr> <tr> <td>SpEL表达式</td> <td>不支持</td> <td>支持</td> </tr> </tbody> </table> <h3 id="自定义配置">自定义配置</h3> <p>如果使用@PropertySource和@Configuration注解实现，@PropertySource注解可以指定自定义配置文件的名称，@Configuration注解可以将实现类指定为自定义配置类，如果需要将自定义配置文件中的属性值注入实体类属性，可以使@ConfigurationProperties或@Value注入属性值</p> <ul> <li>自定义配置文件,我们创建文件My.properties<br /> 并且在里面输入</li> </ul> <pre><code>my.name=hjk my.address=hehehe</code></pre> <p>修改Person类</p> <pre><code>package com.hjk.springboot01.pojo;  import org.springframework.boot.context.properties.ConfigurationProperties; import org.springframework.boot.context.properties.EnableConfigurationProperties; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.PropertySource;  @Configuration @PropertySource("classpath:My.properties") @EnableConfigurationProperties(Person.class) @ConfigurationProperties(prefix = "my") public class Person {     private String name;     private String address;      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public String getAddress() {         return address;     }      public void setAddress(String address) {         this.address = address;     }      @Override     public String toString() {         return "Person{" +                 "name='" + name + '\'' +                 ", address='" + address + '\'' +                 '}';     } }</code></pre> <table> <thead> <tr> <th>@Configuration</th> <th>表示自定义配置类，这个类会作为bean组件添加到spring容器种</th> </tr> </thead> <tbody> <tr> <td>@PropertySource</td> <td>指定自定义配置文件的位置和名称</td> </tr> <tr> <td>@ConfigurationProperties</td> <td>将配置类中以指定开头的属性值注入配置类属性</td> </tr> <tr> <td>@EnableConfigurationProperties</td> <td>开启配置的属性注入功能，配合@ConfigurationProperties使用</td> </tr> </tbody> </table> <h3 id="使用profile进行多环境配置">使用Profile进行多环境配置</h3> <p>在实际开发中，应用程序通常需要部署到不同的环境中，比如开发环境、测试环境、生产环境。不同的环境可能需要不同的配置，针对这种情况，显然手动修改配置文件适应不同开发环境很不现实，这样我们就可以使用项目的多环境配置。</p> <h4 id="使用profile进行多环境配置-1">使用Profile进行多环境配置</h4> <p>使用Profile进行多环境配置命名必须是固定格式。</p> <pre><code>application-dev.properties application-test.properties application-prod.properties</code></pre> <p>如果想使用上述对应环境的配置文件，需要在全局配置文件里开启指定的配置文件即可。<br /> 有两种方式：<br /> 第一种：在控制台输入</p> <pre><code>java -jar xxx.jar --spring.profiles.active=dev</code></pre> <p>第二种：在application.properties或者yaml中开启</p> <pre><code>spring.profiles.active=dev</code></pre> <hr/> <ul> <li>使用注解@Profile进行多环境配置，这里就不写了。</li> </ul> <h2 id="总结">总结</h2> <p>主要记录了springboot的核心配置和相关注解，包括全局配置使用，配置文件属性值的注入、springboot自定义配置、多环境配置，这些都是需要我们掌握的基本技能。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-42458.htm">建议穷人养的10种猫100元以下的猫咪（100块能买什么猫）</a></p>
                                        <p>下一个：<a href="/news/article-42949.htm">猫领养协议书范本图片（领养猫签领养协议有什么套路）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-18-node-share-links.htm" title="11月18日→19.1M/S|2024年最新免费节点Clash Node订阅链接地址">11月18日→19.1M/S|2024年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-17-free-subscribe-node.htm" title="1月17日→22.8M/S|2025年最新免费节点Clash Node订阅链接地址">1月17日→22.8M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-29848.htm" title="南京宠物寄养哪里好（南京哪里可以寄养狗狗）">南京宠物寄养哪里好（南京哪里可以寄养狗狗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-free-subscribe-node.htm" title="1月2日→22.9M/S|2025年最新免费节点Clash Node订阅链接地址">1月2日→22.9M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-26-node-share-links.htm" title="10月26日→22M/S|2024年最新免费节点Clash Node订阅链接地址">10月26日→22M/S|2024年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-30809.htm" title="【哈尔滨宠物店|哈尔滨宠物服务信息】（哈尔滨市宠物店）">【哈尔滨宠物店|哈尔滨宠物服务信息】（哈尔滨市宠物店）</a></li>
                        <li class="py-2"><a href="/news/article-25647.htm" title="数据结构与算法知识点总结（3）树、图与并查集">数据结构与算法知识点总结（3）树、图与并查集</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-19-node-share.htm" title="10月19日→21.1M/S|2024年最新免费节点Clash Node订阅链接地址">10月19日→21.1M/S|2024年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-18773.htm" title="宠物医院十大品牌加盟费多少钱一个月（宠物医院加盟好还是自己开好）">宠物医院十大品牌加盟费多少钱一个月（宠物医院加盟好还是自己开好）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-3-free-subscribe-node.htm" title="11月3日→19.2M/S|2024年最新免费节点Clash Node订阅链接地址">11月3日→19.2M/S|2024年最新免费节点Clash Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">57</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!-- Footer Section Starts -->
    <footer class="footer-section common-footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="footer-logo">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Clash Node机场节点分享官网</a> 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Javascript Files -->
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery-2.2.4.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/slick.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.magnific-popup.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.lineProgressbar.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/lineProgressbarActivate.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/easing.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/wow.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>