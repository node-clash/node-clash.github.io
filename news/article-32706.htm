<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://node-clash.github.io/news/article-32706.htm" />
    <!-- Required Meta Tags -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Spring Security核心组件之安全上下文</title>
        <meta name="description" content="1、安全上下文 Spring Security使用接口SecurityContext抽象建模"安全上下文"这一概念。这里安全上下文SecurityContext指的是当前执行线程使用的最少量的安全信息" />
        <link rel="icon" href="/assets/website/img/node_clash/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Node机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://node-clash.github.io/news/article-32706.htm" />
    <meta property="og:site_name" content="Clash Node机场节点分享官网" />
    <meta property="og:title" content="Spring Security核心组件之安全上下文" />
    <meta property="og:image" content="https://node-clash.github.io/uploads/20240909-1/9ee547b136924d46adf79c4c9c2228ec.webp" />
        <meta property="og:release_date" content="2024-12-29T05:24:21" />
    <meta property="og:updated_time" content="2024-12-29T05:24:21" />
        <meta property="og:description" content="1、安全上下文 Spring Security使用接口SecurityContext抽象建模"安全上下文"这一概念。这里安全上下文SecurityContext指的是当前执行线程使用的最少量的安全信息" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Security核心组件之安全上下文">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
        
    <!-- CSS Files -->
    <link rel="stylesheet" href="/assets/website/css/node_clash/animate.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/slick.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/jquery.lineProgressbar.css">
    <link rel="stylesheet" href="/assets/website/css/node_clash/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FTZXQP7KV5"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FTZXQP7KV5');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- Preloader Starts -->
    <div class="preloader" id="preloader">
        <div class="preloader-inner">
            <div class="spinner">
                <div class="bounce1"></div>
                <div class="bounce2"></div>
                <div class="bounce3"></div>
            </div>
        </div>
    </div>
    <!-- Header Section Starts -->
    <header class="cropium-header-section fixed-navigation">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <!-- Navbar Starts -->
                    <nav class="navbar navbar-area navbar-expand-lg nav-style-02 nav-absolute">
                        <div class="container nav-container">
                            <div class="responsive-mobile-menu">
                                <div class="logo-wrapper">
                                                                        <a href="/" class="logo">
                                        <span>Clash Node</span>
                                    </a>
                                                                    </div>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#cropium-main-menu" aria-expanded="false" aria-label="Toggle navigation">
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                    <span class="toggle-icon"></span>
                                </button>
                            </div>
                            <div class="collapse navbar-collapse" id="cropium-main-menu">
                                <ul class="navbar-nav">
                                                                        <li>
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li>
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li>
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li>
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li>
                                        <a href="#">关于</a>
                                    </li>
                                    <li>
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </nav>
                    <!-- Navbar End -->
                </div>
            </div>
        </div>
    </header>
    <!-- Breadcrumb Area Starts -->
    <section class="breadcrumb-section">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <h1 class="title">Spring Security核心组件之安全上下文</h1>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> <span> / 正文</span>
                </div>
            </div>
        </div>
    </section>
    <!-- About Section Starts -->
    <section class="cropium-about-section padding-top-90 padding-bottom-120">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h4><a id="1_0" rel="nofollow"></a>1、安全上下文</h4> <p>Spring Security使用接口SecurityContext抽象建模"安全上下文"这一概念。这里安全上下文SecurityContext指的是当前执行线程使用的最少量的安全信息(其实就是用于代表访问者账号的有关信息)。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">SecurityContext</span><span class="token keyword">extends</span><span class="token class-name">Serializable</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Authentication</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <blockquote> <p>Spring Security为接口SecurityContext提供的缺省实现SecurityContextImpl,该实现逻辑其实很简单，主要就是保持一个Authentication`对象</p> </blockquote> <h4><a id="2_10" rel="nofollow"></a>2、安全上下文管理器</h4> <p>当一个线程在服务用户期间，该安全上下文对象会保存在SecurityContextHolder中。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">SecurityContextHolder</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span> MODE_THREADLOCAL<span class="token operator">=</span><span class="token string">"MODE_THREADLOCAL"</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span> MODE_INHERITABLETHREADLOCAL<span class="token operator">=</span><span class="token string">"MODE_INHERITABLETHREADLOCAL"</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span> MODE_GLOBAL<span class="token operator">=</span><span class="token string">"MODE_GLOBAL"</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span> SYSTEM_PROPERTY<span class="token operator">=</span><span class="token string">"spring.security.strategy"</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token class-name">String</span> strategyName<span class="token operator">=</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>SYSTEM_PROPERTY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token class-name">SecurityContextHolderStrategy</span> strategy<span class="token punctuation">;</span><span class="token comment">//默认是ThreadLocalSecurityContextHolderStrategy</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">int</span> initializeCount<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">static</span><span class="token punctuation">{<!-- --></span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//忽略代码....</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token comment">// Set default</span> 			strategyName<span class="token operator">=</span> MODE_THREADLOCAL<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>MODE_THREADLOCAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			strategy<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ThreadLocalSecurityContextHolderStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>MODE_INHERITABLETHREADLOCAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			strategy<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">InheritableThreadLocalSecurityContextHolderStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>MODE_GLOBAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			strategy<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">GlobalSecurityContextHolderStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{<!-- --></span><span class="token comment">// Try to load a custom strategy</span><span class="token keyword">try</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz<span class="token operator">=</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>strategyName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Constructor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> customStrategy<span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 				strategy<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">)</span> customStrategy<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">ReflectionUtils</span><span class="token punctuation">.</span><span class="token function">handleReflectionException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>  		initializeCount<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//忽略代码....</span><span class="token punctuation">}</span></code></pre> <p>SecurityContextHolder类提供的功能是保持SecurityContext,不过它的用法不是让使用者创建多个SecurityContextHolder对象，而是提供一组公开静态工具方法。其底层是感觉系统变量<code>spring.security.strategy</code>的值来判断使用何种策略SecurityContextHolderStrategy</p> <p>SecurityContextHolder 类有2种方式初始化 SecurityContextHolderStrategy。</p> <p>其一，通过其静态方法setStrategyName。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">setStrategyName</span><span class="token punctuation">(</span><span class="token class-name">String</span> strategyName<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span>strategyName<span class="token operator">=</span> strategyName<span class="token punctuation">;</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p>其二，通过设置属性值 spring.security.strategy。</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">String</span> SYSTEM_PROPERTY<span class="token operator">=</span><span class="token string">"spring.security.strategy"</span><span class="token punctuation">;</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token class-name">String</span> strategyName<span class="token operator">=</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>SYSTEM_PROPERTY<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h4><a id="3_82" rel="nofollow"></a>3、安全上下文生成器</h4> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">interface</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">{<!-- --></span><span class="token keyword">void</span><span class="token function">clearContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SecurityContext</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token function">setContext</span><span class="token punctuation">(</span><span class="token class-name">SecurityContext</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">SecurityContext</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/9eb3181f0e9782e8bae517882198c6e5.jpg" alt="Spring Security核心组件之安全上下文"><br /> 线程本地模式</p> <blockquote> <p>对应用中的某个线程保持一个SecurityContext,这种模式下，应用中的每个线程同一时间通过SecurityContextHolder访问到的都是关于自己线程的SecurityContext;</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">ThreadLocalSecurityContextHolderStrategy</span><span class="token keyword">implements</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">{<!-- --></span><span class="token comment">//使用ThreadLocal存储安全上下文</span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityContext</span><span class="token punctuation">&gt;</span></span> contextHolder<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">clearContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		contextHolder<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SecurityContext</span> ctx<span class="token operator">=</span> contextHolder<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ctx<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			ctx<span class="token operator">=</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			contextHolder<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ctx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setContext</span><span class="token punctuation">(</span><span class="token class-name">SecurityContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"Only non-null SecurityContext instances are permitted"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		contextHolder<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">SecurityContextImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>线程继承模式</p> <blockquote> <p>InheritableThreadLocal 相较于 ThreadLocal，多了子线程可以继承父线程的属性的特性，但是，针对普通WEB应用，应该是英雄无用武之地。</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">InheritableThreadLocalSecurityContextHolderStrategy</span><span class="token keyword">implements</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityContext</span><span class="token punctuation">&gt;</span></span> contextHolder<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">InheritableThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//忽略代码.....</span><span class="token punctuation">}</span></code></pre> <p>全局模式</p> <blockquote> <p>对整个应用公开保持一个SecurityContext,这种模式下,应用中的多个线程同一时间通过SecurityContextHolder访问到的都会是同一个SecurityContext对象;</p> </blockquote> <pre><code class="prism language-java"><span class="token keyword">final</span><span class="token keyword">class</span><span class="token class-name">GlobalSecurityContextHolderStrategy</span><span class="token keyword">implements</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token class-name">SecurityContext</span> contextHolder<span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">clearContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 		contextHolder<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">if</span><span class="token punctuation">(</span>contextHolder<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span> 			contextHolder<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">SecurityContextImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> contextHolder<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setContext</span><span class="token punctuation">(</span><span class="token class-name">SecurityContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"Only non-null SecurityContext instances are permitted"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		contextHolder<span class="token operator">=</span> context<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">SecurityContextImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <h4><a id="4_167" rel="nofollow"></a>4、安全上下文生成器的自定义</h4> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MySecurityContextHolderStrategy</span><span class="token keyword">implements</span><span class="token class-name">SecurityContextHolderStrategy</span><span class="token punctuation">{<!-- --></span><span class="token keyword">private</span><span class="token keyword">static</span><span class="token keyword">final</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SecurityContext</span><span class="token punctuation">&gt;</span></span> contextHolder<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">clearContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         contextHolder<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SecurityContext</span> ctx<span class="token operator">=</span> contextHolder<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>ctx<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>             ctx<span class="token operator">=</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             contextHolder<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ctx<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token keyword">void</span><span class="token function">setContext</span><span class="token punctuation">(</span><span class="token class-name">SecurityContext</span> context<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span><span class="token string">"Only non-null SecurityContext instances are permitted"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         contextHolder<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span><span class="token class-name">SecurityContext</span><span class="token function">createEmptyContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token keyword">new</span><span class="token class-name">SecurityContextImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>MySecurityContextHolderStrategy的注册</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MyWebSecurityConfig</span><span class="token keyword">extends</span><span class="token class-name">WebSecurityConfigurerAdapter</span><span class="token punctuation">{<!-- --></span><span class="token keyword">static</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">setStrategyName</span><span class="token punctuation">(</span><span class="token string">"learinning.securityextend.MySecurityContextHolderStrategy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//忽略代码....</span><span class="token punctuation">}</span></code></pre> <p>测试</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"demo"</span><span class="token punctuation">)</span><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">DemoController</span><span class="token punctuation">{<!-- --></span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"test"</span><span class="token punctuation">)</span><span class="token comment">// @RolesAllowed({"admin"})</span><span class="token keyword">public</span><span class="token class-name">String</span><span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">SecurityContextHolderStrategy</span> context<span class="token operator">=</span><span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContextHolderStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span><span class="token string">"test1"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/1c72bd335b5d021dcd8f8c0581bd0e60.jpg" alt="Spring Security核心组件之安全上下文"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-32225.htm">动物医院诊室的岗位职责怎么写（动物医院诊疗活动范围）</a></p>
                                        <p>下一个：<a href="/news/article-32707.htm">动物疫苗注射方法有几种图片 动物疫苗注射方法有几种图片大全</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-1-20-free-node-subscribe.htm" title="1月20日→21.3M/S|2025年最新免费节点Clash Node订阅链接地址">1月20日→21.3M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-23785.htm" title="vue解决vant组件样式失效问题">vue解决vant组件样式失效问题</a></li>
                        <li class="py-2"><a href="/news/article-28433.htm" title="厦门哪里领养宠物（厦门有没有领养宠物）">厦门哪里领养宠物（厦门有没有领养宠物）</a></li>
                        <li class="py-2"><a href="/news/article-32225.htm" title="动物医院诊室的岗位职责怎么写（动物医院诊疗活动范围）">动物医院诊室的岗位职责怎么写（动物医院诊疗活动范围）</a></li>
                        <li class="py-2"><a href="/news/article-45446.htm" title="哈尔滨东北农大附近汉庭酒店（哈尔滨东北农业大学附近宾馆）">哈尔滨东北农大附近汉庭酒店（哈尔滨东北农业大学附近宾馆）</a></li>
                        <li class="py-2"><a href="/news/article-40956.htm" title="狗粮批发地（狗粮批发哪里便宜又好）">狗粮批发地（狗粮批发哪里便宜又好）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-3-node-share.htm" title="12月3日→18.2M/S|2024年最新免费节点Clash Node订阅链接地址">12月3日→18.2M/S|2024年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-5-free-node-subscribe.htm" title="1月5日→22.7M/S|2025年最新免费节点Clash Node订阅链接地址">1月5日→22.7M/S|2025年最新免费节点Clash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-22412.htm" title="开宠物店一天能赚多少钱（开宠物店一个月可以赚多少钱）">开宠物店一天能赚多少钱（开宠物店一个月可以赚多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-32224.htm" title="动物疫苗和人体疫苗的区别是什么呢图片（动物疫苗对人体有害吗）">动物疫苗和人体疫苗的区别是什么呢图片（动物疫苗对人体有害吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!-- Footer Section Starts -->
    <footer class="footer-section common-footer">
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div class="footer-logo">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                            <a href="/">Clash Node机场节点分享官网</a> 版权所有 Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- Javascript Files -->
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery-2.2.4.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/slick.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/counterup.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.magnific-popup.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/jquery.lineProgressbar.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/lineProgressbarActivate.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/easing.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/vendor/wow.min.js"></script>
    <script src="/assets/website/js/frontend/node_clash/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>